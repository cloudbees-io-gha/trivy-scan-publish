name: 'Trivy scan and publish to Platform'
description: 'Runs a Trivy SAST scan in your GitHub Actions workflow and publishes the results to the CloudBees platform.'

branding:
  icon: 'command'
  color: 'purple'

inputs:
  cloudbees-url: 
    description: Cloudbees API URL
    required: false
    default: "https://api.cloudbees.io"
  binary-tar-path:
    description: 'Path to the binary to scan'
    required: true
  step-id:
    description: GHA Step ID
    required: false
    default: ''
  license:
    description: 'Flag to enable license scanning (true/false)'
    required: false
    default: ''
outputs:
  critical-count:
    description: A string containing the number of Critical security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.critical-count}}
  very-high-count:
    description: A string containing the number of Very High security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.very-high-count}}
  high-count:
    description: A string containing the number of High security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.high-count}}
  medium-count:
    description: A string containing the number of Medium security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.medium-count}}
  low-count:
    description: A string containing the number of Low security findings discovered during the scan.
    value: ${{steps.process-outputs.outputs.low-count}}

runs:
  using: "composite"
  steps:

    - name: Create request JSON file in workspace
      shell: bash
      run: |
        FILE_PATH="$GITHUB_WORKSPACE/store/request/request.json"
        mkdir -p "$(dirname "$FILE_PATH")"
        touch "$FILE_PATH"
        echo "File created at: $FILE_PATH"  

    - name: Generate reference files 
      shell: bash
      run: |
        docker run --rm \
          -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
          -e INPUT_CLOUDBEES_API_URL="${{ inputs.cloudbees-url }}" \
          -e INPUT_RUN_ID="${{ github.run_id }}" \
          -e INPUT_IS_GITHUB_WORKFLOW="true" \
          -e GITHUB_RUN_ID="${{ github.run_id }}" \
          -e GITHUB_WORKFLOW_REF="${{ github.workflow_ref }}" \
          -e GITHUB_RUN_ATTEMPT="${{ github.run_attempt }}" \
          -e GITHUB_RUN_NUMBER="${{ github.run_number }}" \
          -e GITHUB_REF_NAME="${{ github.ref_name }}" \
          -e GITHUB_REPOSITORY="${{ github.repository }}" \
          -e GITHUB_SERVER_URL="${{ github.server_url }}/${{ github.repository }}" \
          -e GITHUB_JOB="${{ github.job }}" \
          -e GITHUB_PROVIDER="GITHUB" \
          -e GITHUB_WORKSPACE="$GITHUB_WORKSPACE" \
          -v $GITHUB_OUTPUT:$GITHUB_OUTPUT \
          -e GITHUB_OUTPUT="$GITHUB_OUTPUT" \
          -e ACTIONS_ID_TOKEN_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN \
          -e ACTIONS_ID_TOKEN_REQUEST_URL=$ACTIONS_ID_TOKEN_REQUEST_URL \
          public.ecr.aws/l7o7z1g8/actions/assets-plugin-chain-utils:2312e778e9df96bc098dde0a12c6c1857c8eec54 \
          generate-references --asset-type "BINARY" --tags "BINARY_CONTAINER" --binary-tar-path ${{ inputs.binary-tar-path }}

    - name: Run trivy compliance plugin
      shell: bash
      run: |
        CMD=(--mode single)
        if [[ "${{ inputs.license }}" == "true" ]]; then
          CMD+=( -license )
        fi

        docker run --rm \
        -u root \
        -v "$GITHUB_WORKSPACE:$GITHUB_WORKSPACE" \
        -e GITHUB_WORKSPACE="$GITHUB_WORKSPACE" \
        -e RUN_ID="${{ github.run_id }}" \
        -e JOB_ID="${{ github.job }}" \
        -e STEP_ID="${{ inputs.step-id }}" \
        public.ecr.aws/l7o7z1g8/actions/assets-trivy-scanner:182394335695d9558ce04dd2603ca13c2436be35 \
        "${CMD[@]}"


    - id: process-outputs
      name: Complete execution plan
      shell: bash
      run: |
        docker run --rm \
          -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
          -e INPUT_CLOUDBEES_API_URL="${{ inputs.cloudbees-url }}" \
          -e INPUT_RUN_ID="${{ github.run_id }}" \
          -e INPUT_IS_GITHUB_WORKFLOW="true" \
          -e GITHUB_RUN_ID="${{ github.run_id }}" \
          -e GITHUB_WORKFLOW_REF="${{ github.workflow_ref }}" \
          -e GITHUB_RUN_ATTEMPT="${{ github.run_attempt }}" \
          -e GITHUB_RUN_NUMBER="${{ github.run_number }}" \
          -e GITHUB_REF_NAME="${{ github.ref_name }}" \
          -e GITHUB_REPOSITORY="${{ github.repository }}" \
          -e GITHUB_SERVER_URL="${{ github.server_url }}/${{ github.repository }}" \
          -e GITHUB_JOB="${{ github.job }}" \
          -e GITHUB_PROVIDER="GITHUB" \
          -e GITHUB_WORKSPACE="$GITHUB_WORKSPACE" \
          -v $GITHUB_OUTPUT:$GITHUB_OUTPUT \
          -e GITHUB_OUTPUT="$GITHUB_OUTPUT" \
          -e ACTIONS_ID_TOKEN_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN \
          -e ACTIONS_ID_TOKEN_REQUEST_URL=$ACTIONS_ID_TOKEN_REQUEST_URL \
          public.ecr.aws/l7o7z1g8/actions/assets-plugin-chain-utils:2312e778e9df96bc098dde0a12c6c1857c8eec54 \
          process-outputs
